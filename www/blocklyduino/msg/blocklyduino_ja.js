var MSG = {
    blocks: "ブロック",
    catLogic: "論理",
    catLoops: "繰り返し",
    catMath: "数学",
    catText: "テキスト",
    catLists: "リスト",
    catColour: "色",
    catVariables: "変数",
    catFunctions: "関数",
    listVariable: "リスト",
    textVariable: "テキスト",
    screenshot: "Download Screenshot",
    xmlError: "保存されたファイルを読み込めませんでした。別のバージョンのブロックリーで作成された可能性があります。",
    badXml: "XML のエラーです:\n%1\n\nXML の変更をやめるには「OK」、編集を続けるには「キャンセル」を選んでください。",
    languageSpan: "choose language",
    themeSpan: "choose  theme",
    renderSpan: "choose renderer",
    undoButton_span: "Undo",
    redoButton_span: "Redo",
    boardSpan: "choose Arduino board",
    verifyButton_span: "Verify code",
    serialSpan: "choose COM port",
    uploadButton_span: "Upload",
    viewCodeButton_span: "Code peek",
    serialConnectButton_span: "Serial monitor",
    saveCodeButton_span: "Export Arduino Code",
    newButton_span: "New project",
    saveXMLButton_span: "Save to BlocklyDuino file",
    loadXMLfakeButton_span: "Load BlocklyDuino file",
    resetButton_span: "Reset BlocklyDuino",
    helpButton_span: "About",
    copyCodeButton_span: "copy code to clipboard",
    accessibilitySpan: "Enable Accessibility Mode:",
    defaultCursorSpan: "Default Cursor",
    basicCursorSpan: "Basic Cursor",
    lineCursorSpan: "Line Cursor",
    keyMappingSpan: "Open Key Mappings",
    themeClassicSpan: "Classic",
    themeModernSpan: "Modern",
    themeDeuteranopiaSpan: "Deuteranopia/Protanopia",
    themeTritanopiaSpan: "Tritanopia",
    themeZelosSpan: "Zelos",
    themeHighContrastSpan: "High Contrast",
    themeDarkSpan: "Dark",
    themeBwSpan: "Black & White",
    keyMappingModalSpan: "Set key mappings below",
    detailedCompilation_span: "Detailed compilation verbose",
    accessibilityExplanationSpan: "You can enter accessibility mode by <b>shift clicking anywhere on the workspace or on a block</b>. <br /><br /><b>Workspace Navigation</b><br />W: Previous block/field/input at the same level<br />A: Up one level (Field (or input) -&gt; Block -&gt; Input (or field) -&gt; Block -&gt; Stack -&gt; Workspace)<br />S: Next block/field/input at the same level<br />D: Down one level (Workspace -&gt; Stack -&gt; Block -&gt; Input (or field) -&gt; Block -&gt; Field (or input))<br />T: Will open the toolbox. Once in there you can moving around using the WASD keys. And insert a block by hitting Enter<br />X: While on a connection hit X to disconnect the block after the cursor<br /><br /><b>Cursor</b><br /><b>Default Cursor:</b> Allow the user to go to the previous, next, in or out location.<br /><b>Basic Cursor:</b> Using the pre order traversal allows the user to go to the next and previous location.</td>",
    actionName0: "previous",
    actionName1: "next",
    actionName2: "in",
    actionName3: "out",
    actionName4: "insert",
    actionName5: "mark",
    actionName6: "disconnect",
    actionName7: "toolbox",
    actionName8: "exit",
    actionName9: "move workspace cursor up",
    actionName10: "move workspace cursor down",
    actionName11: "move workspace cursor left",
    actionName12: "move workspace cursor right",
    actionName13: "toggle keyboard navigation",
    setup_sideButton_span: "setup",
    fontSizeSpan: "rendering",
    optionFontSizeBlocks: "Blocks Font Size",
    optionFontSizePage: "Page Font Size",
    optionFontSpacingPage: "Page Font Spacing",
    keyMappingExplanationSpan: "<p>You can enter <em>accessibility </em>mode by <strong>shift clicking anywhere on the workspace</strong> or on a block.</p><p>Key mapping is customizable by activating it.</p><p>You can acces more complete <strong>documentation </strong>by <strong><a href='https://github.com/BlocklyDuino/BlocklyDuino-v2' target='_blank'>clicking on '?'</a></strong>.</span></p>",
    //arduino_CLI_functions.js
    config_sideButton_span: "Arduino CLI control",
    arduinoCLI_githubLinkButton_span: "documentation",
    coreUpdateButton_msg: "Updating...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",
    cleanCLIcacheButton_msg: "Cleaning...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",
    cleanCLIcacheButton_error_msg: "Error deleting folder .\\tmp",
    cleanCLIcacheButton_success_msg: "Cleaned!",
    listBoardsButton_msg: "Searching for board...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",
    installBoardsButton_msg: "Installing board support, wait...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",
    searchlLibButton_msg: "Searching for library...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",    
    installLibButton_msg: "Installing library...\n<i class='fa fa-spinner fa-pulse fa-1_5x fa-fw'></i>",
    coreUpdateButton_span: "update core and libraries",
    cleanCLIcacheButton_span: "cleaning cache",
    listBoardsButton_span: "detection and list boards",
    installBoardsInput_span: "name of board to support",
    installBoardsButton_span: "install this board type",
    searchlLibInput_span: "name of library to search",
    searchlLibButton_span: "search this library",
    installLibInput_span: "name of library to install",
    installLibButton_span: "install this library"
};

var MSG = {
    blocks: "Blocs",
    catLogic: "Logique",
    catLoops: "Boucles",
    catMath: "Math",
    catText: "Texte",
    catLists: "Listes",
    catColour: "Couleurs",
    catVariables: "Variables",
    catFunctions: "Fonctions",
    listVariable: "liste",
    textVariable: "texte",
    xmlError: "Impossible de charger le fichier de sauvegarde.  Peut être a t-il été créé avec une autre version de Blockly ?",
    badXml: "Erreur d’analyse du fichier :\n%1\n\nSélectionner 'OK' pour abandonner vos modifications ou 'Annuler' pour continuer à modifier le fichier.",
    languageSpan: "choix de la langue",
    themeSpan: "choix du thème",
    renderSpan: "choix de la forme",
    undoButton_span: "annuler",
    redoButton_span: "refaire",
    boardSpan: "choix de la carte",
    verifyButton_span: "compiler le code",
    serialSpan: "choix du port COM",
    uploadButton_span: "téléverser",
	viewCodeButton_span: "aperçu du code",
	serialConnectButton_span: "moniteur série",
    saveCodeButton_span: "exporte le code Arduino",
    newButton_span: "nouveau projet",
    saveXMLButton_span: "enregistrer le fichier BlocklyDuino",
    loadXMLfakeButton_span: "ouvrir un fichier BlocklyDuino",
    resetButton_span: "réinitialiser BlocklyDuino",
    helpButton_span: "aide",
    accessibilitySpan: "activer le contrôle clavier :",
    defaultCursorSpan: "curseur par défaut",
    basicCursorSpan: "curseur classique",
    lineCursorSpan: "curseur ligne",
    keyMappingSpan: "attribution des touches",
    themeClassicSpan: "classique",
    themeModernSpan: "moderne",
    themeDeuteranopiaSpan: "Deuteranopia/Protanopia",
    themeTritanopiaSpan: "Tritanopia",
    themeZelosSpan: "Zelos",
    themeHighContrastSpan: "Contraste élevé",
    themeDarkSpan: "Sombre",
    themeBwSpan: "Noir & Blanc",
    keyMappingModalSpan: "Attrbution des touches",
    detailedCompilation_span: "Résultats détaillés",
    accessibilityExplanationSpan: "You can enter accessibility mode by <b>shift clicking anywhere on the workspace or on a block</b>. <br /><br /><b>Workspace Navigation</b><br />W: Previous block/field/input at the same level<br />A: Up one level (Field (or input) -&gt; Block -&gt; Input (or field) -&gt; Block -&gt; Stack -&gt; Workspace)<br />S: Next block/field/input at the same level<br />D: Down one level (Workspace -&gt; Stack -&gt; Block -&gt; Input (or field) -&gt; Block -&gt; Field (or input))<br />T: Will open the toolbox. Once in there you can moving around using the WASD keys. And insert a block by hitting Enter<br />X: While on a connection hit X to disconnect the block after the cursor<br /><br /><b>Cursor</b><br /><b>Default Cursor:</b> Allow the user to go to the previous, next, in or out location.<br /><b>Basic Cursor:</b> Using the pre order traversal allows the user to go to the next and previous location.</td>",
    actionName0: "précédent",
    actionName1: "suivant",
    actionName2: "rentrer dans le bloc",
    actionName3: "sortir du bloc",
    actionName4: "insérer",
    actionName5: "marquer",
    actionName6: "détacher le bloc",
    actionName7: "menu",
    actionName8: "sortie",
    actionName9: "espace de travail vers le haut",
    actionName10: "espace de travail vers le bas",
    actionName11: "espace de travail vers la gauche",
    actionName12: "espace de travail vers la droite",
    actionName13: "basculer la navigation clavier",
    setup_sideButton_span: "configuration",
    fontSizeSpan: "rendu",
    optionFontSize: "taille de police",
    keyMappingExplanationSpan: "<p>You can enter <em>accessibility </em>mode by <strong>shift clicking anywhere on the workspace</strong> or on a block.</p><p>Key mapping is customizable by activating it.</p><p>You can acces more complete <strong>documentation </strong>by <strong><a href='https://github.com/BlocklyDuino/BlocklyDuino-v2' target='_blank'>clicking on '?'</a></strong>.</span></p>"
};
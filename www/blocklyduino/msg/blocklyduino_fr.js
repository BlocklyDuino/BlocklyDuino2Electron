var MSG = {
    blocks: "Blocs",
    catLogic: "Logique",
    catLoops: "Boucles",
    catMath: "Math",
    catText: "Texte",
    catLists: "Listes",
    catColour: "Couleurs",
    catVariables: "Variables",
    catFunctions: "Fonctions",
    listVariable: "liste",
    textVariable: "texte",
    xmlError: "Impossible de charger le fichier de sauvegarde.  Peut être a t-il été créé avec une autre version de Blockly ?",
    badXml: "Erreur d’analyse du fichier :\n%1\n\nSélectionner 'OK' pour abandonner vos modifications ou 'Annuler' pour continuer à modifier le fichier.",
    languageSpan: "choix de la langue",
    themeSpan: "choix du thème",
    renderSpan: "choix de la forme",
    boardSpan: "choix de la carte",
    serialSpan: "choix du port COM",
    undoButton_span: "annuler",
    redoButton_span: "refaire",
    verifyButton_span: "compiler le code",
    uploadButton_span: "téléverser",
	serialConnectButton_span: "moniteur série",
    saveCodeButton_span: "exporte le code Arduino",
    newButton_span: "nouveau projet",
    saveXMLButton_span: "enregistrer le fichier BlocklyDuino",
    loadXMLfakeButton_span: "ouvrir un fichier BlocklyDuino",
    resetButton_span: "réinitialiser BlocklyDuino",
    helpButton_span: "à propos",
    accessibilitySpan: "Activer le contrôle clavier :",
    defaultCursorSpan: "curseur par défaut",
    basicCursorSpan: "curseur classique",
    lineCursorSpan: "curseur ligne",
    keyMappingSpan: "attribution des touches",
    themeClassicSpan: "classique",
    themeModernSpan: "moderne",
    themeDeuteranopiaSpan: "Deuteranopia/Protanopia",
    themeTritanopiaSpan: "Tritanopia",
    themeZelosSpan: "Zelos",
    themeHighContrastSpan: "contraste élevé",
    themeDarkSpan: "sombre",
    themeBwSpan: "noir et blanc",
    keyMappingModalSpan: "définir l'attribution des touches",
    accessibilityExplanationSpan: "<p>Vous pouvez entrer en mode accessibilit&eacute; en <strong> Shift cliquant n'importe o&ugrave; dans l'espace de travail ou sur un bloc </strong>. <br /> <br /> <strong> Navigation dans l'espace de travail </strong> <br /> W : bloc / champ / entr&eacute;e pr&eacute;c&eacute;dent de m&ecirc;me niveau.<br /> A : niveau sup&eacute;rieur (champ (ou entr&eacute;e) -&gt; bloc -&gt; entr&eacute;e (ou champ) -&gt; bloc -&gt; empilement -&gt; espace de travail).<br /> S : prochain bloc / champ / entr&eacute;e au m&ecirc;me niveau.<br /> D : niveau inf&eacute;rieur (espace de travail) -&gt; pile -&gt; bloc -&gt; entr&eacute;e (ou champ) -&gt; bloc -&gt; champ (ou entr&eacute;e)) <br /> T : ouvre le menu des cat&eacute;gories (bo&icirc;te &agrave; outils). Une fois dedans, vous pouvez vous d&eacute;placer en utilisant les touches WASD. Et ins&eacute;rer un bloc en appuyant sur Entr&eacute;e.<br /> X : lors d&rsquo;une connexion, appuyez sur X pour d&eacute;connecter le bloc apr&egrave;s le curseur.<br /> <br /> <strong> Curseur</strong>s<br /> <strong> Par d&eacute;faut : </strong>autorise l&rsquo;utilisateur &agrave; se rendre &agrave; l&rsquo;emplacement pr&eacute;c&eacute;dent, suivant.<br /><strong>De base : </strong>l&rsquo;utilisation du parcours pr&eacute;d&eacute;fini permet &agrave; l&rsquo;utilisateur de passer &agrave; l'emplacement suivant et pr&eacute;c&eacute;dent.</p>",
    actionName0: "précédent",
    actionName1: "suivant",
    actionName2: "dedans",
    actionName3: "dehors",
    actionName4: "insérer",
    actionName5: "marquer",
    actionName6: "détacher",
    actionName7: "catégories",
    actionName8: "sortie",
    actionName9: "curseur vers le haut",
    actionName10: "curseur vers le bas",
    actionName11: "curseur vers la gauche",
    actionName12: "curseur vers la droite",
    actionName13: "basculer la navigation au clavier",
    aboutHelpModalSpan: "about BlocklyDuino project",
    aboutHelpModalContentSpan: "<p style='text-align: center;'><em>Help : <a href='https://github.com/BlocklyDuino/BlocklyDuinoReboot'>https://github.com/BlocklyDuino/BlocklyDuinoReboot</a></em></p><p>BlocklyDuino is a <strong>web-based visual programming editor for <a href='http://www.arduino.cc/' rel='nofollow'>Arduino</a></strong>.</p><p>BlocklyDuino is based on <a href='https://developers.google.com/blockly/' rel='nofollow'>Blockly</a>, the web-based, graphical programming editor. Provide static type language blocks and code generators for Arduino programming.</p><p><a href='https://raw.githubusercontent.com/BlocklyDuino/BlocklyDuinoReboot/master/blockly_logos/logo_built_on.png' target='_blank' rel='noopener noreferrer'><img style='max-width: 100%; display: block; margin-left: auto; margin-right: auto;' src='https://raw.githubusercontent.com/BlocklyDuino/BlocklyDuinoReboot/master/blockly_logos/logo_built_on.png' alt='' width='305' height='110' /></a>BlocklyDuino also support <a href='http://www.seeedstudio.com/wiki/GROVE_System' rel='nofollow'>Grove</a> blocks to easily get started with microcontroller-based experimentation and learning.</p><h3>Authors and Contributors</h3><p>S&eacute;bastien Canet (<a href='mailto:scanet@libreduc.cc'>scanet@libreduc.cc</a>) for this reboot and Electron version.</p><p>Fred Lin (@gasolin) for original BlocklyDuino.</p><p>Thanks Neil Fraser, Q.Neutron from Blockly <a href='https://developers.google.com/blockly/' rel='nofollow'>https://developers.google.com/blockly/</a></p><p>Thanks Arduino and Seeeduino guys for Arduino and Grove blocks.</p><p>The project is also inspired by <a href='https://github.com/taweili/ardublock'>ardublock</a> and <a href='http://www.modk.it/' rel='nofollow'>modkit</a></p>"
};
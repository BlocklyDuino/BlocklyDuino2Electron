// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Añade comentario";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "No se puede suprimir la variable '%1' ya que es parte de la definición de la función '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Canbia el valor:";
Blockly.Msg["CLEAN_UP"] = "Limpia los bloques";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Los bloques plegados contienen avisos.";
Blockly.Msg["COLLAPSE_ALL"] = "Pliega todos los bloques";
Blockly.Msg["COLLAPSE_BLOCK"] = "Pliega el bloque";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "color 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "color 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "proporción";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "mezcla";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Mezcla dos colores con una proporción dada (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://ca.wikipedia.org/wiki/Color";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Escoge un color de la paleta.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "color aleatorio";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Escoge un color de forma aleatoria.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "azul";
Blockly.Msg["COLOUR_RGB_GREEN"] = "verde";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";
Blockly.Msg["COLOUR_RGB_RED"] = "rojo";
Blockly.Msg["COLOUR_RGB_TITLE"] = "colorea con";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Crea un color con una cantidad especificada de rojo, verde, y azul. Todos los valores tienen que estar entre 0 y 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "salida del bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continua con la siguiente iteración del bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "salida del contenedor bucle.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Omite el resto de este bucle, y continua con la iteración siguiente.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Aviso: este bloque solo se puede usar dentro de un bucle.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "para cada elemento %1 de la lista %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Para cada elemento de la lista, establece la variable '%1' en el elemento, y ejecuta algunas instrucciones.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg["CONTROLS_FOR_TITLE"] = "cuenta con %1 desde %2 hasta %3 de %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Haz tomar a la variable '%1' los valores desde el inicial hasta el final, incrementando el intervalo, y ejecutando las instrucciones especificadas.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Añade una condición al bloque condicional.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Añade una condición final al bloque condicional.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Añade, suprime, o reordena secciones para reconfigurar este bloque condicional.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "sino";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "sino si";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "si";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Si el valor es cierto, ejecuta algunas instrucciones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Si el valor es cierto, ejecuta el primer bloque de instrucciones, sino ejecuta el segundo bloque de instrucciones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Si el valor es cierto, ejecuta el primer bloque de instrucciones, sino, si el segundo valor es cierto, ejecuta el segundo bloque de instrucciones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Si el valor es cierto, ejecuta el primer bloque de instrucciones, sino, si el segundo valor es cierto, ejecuta el segundo bloque de instrucciones. Si ninguno de los valores es cierto ejecuta el último bloque de instrucciones.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "haz";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "repite %1 veces";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Repite algunas instrucciones algunas veces.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repite hasta";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repite mientras";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Mientras un valor sea falso, repite algunas instrucciones.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Mientras un valor sea cierto, repite algunas instrucciones.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Queréis suprimir todos los %1 bloques?";
Blockly.Msg["DELETE_BLOCK"] = "Suprime el bloque";
Blockly.Msg["DELETE_VARIABLE"] = "Suprime la variable '%1' ";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Queréis suprimir %1 que usa la variable '%2' ?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Suprime %1 bloques";
Blockly.Msg["DISABLE_BLOCK"] = "Desactiva bloque";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplica";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplica comentario";
Blockly.Msg["ENABLE_BLOCK"] = "Activa bloque";
Blockly.Msg["EXPAND_ALL"] = "Expande todos los bloques";
Blockly.Msg["EXPAND_BLOCK"] = "Expande bloque";
Blockly.Msg["EXTERNAL_INPUTS"] = "Entradas externas";
Blockly.Msg["HELP"] = "Ayuda";
Blockly.Msg["INLINE_INPUTS"] = "Entradas en línea";
Blockly.Msg["IOS_CANCEL"] = "Cancela";
Blockly.Msg["IOS_ERROR"] = "Error";
Blockly.Msg["IOS_OK"] = "De acuerdo";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Añade entrada";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Instrucciones autorizadas";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Esta función tiene entradas duplicadas.";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "ENTRADAS";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Añade";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Añade variable";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Suprime";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "No podéis utilizar un nombre de variable vacio.";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Cambia el nombre";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Nombre de la variable";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "crea una lista vacia";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Devuelve una lista de longitud 0, sin contener registros de datos";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Añade, suprime, o reordena secciones para reconfigurar este bloque lista.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "crea lista con";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Añade un elemento a la lista.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Crea una lista con cualquier nombre de elementos.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "primero";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "n° desdel final";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "n°";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "obtiene";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "obtiene y suprime";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "último";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "aleatorio";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "suprime";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Devuelve el primer elemento de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Devuelve el elemento a la posición especificada de la llista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Devuelve el último elemento de la llista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Devuelve un elemento aleatorio de la llista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Suprime y devuelve el primer elemento de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Suprime y devuelve el elemento de la posición especificada de la llista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Suprime y devuelve el último elemento de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Suprime y devuelve un elemento aleatorio de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Suprime el primer elemento de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Suprime el elemento de la posición especificada de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Suprime el último elemento de la lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Suprime un elemento aleatorio de la lista.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "hasta el nº desde el final";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "hasta el nº";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "hasta el final";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "obtiene una sublista desde el primero";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "obtiene una sublista desde el nº del final";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "obtiene una sublista desde el nº";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Crea una copia de la porción especificada de la lista.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 es el último elemento.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 es el primer elemento.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "encuentra la primera ocurrencia del elemento";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "encuentra la última ocurrencia del elemento";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Devuelve el indice de la primera/última ocurrència de los elementos de la lista. Devuelve %1 si el elemento no se encuentra.";
Blockly.Msg["LISTS_INLIST"] = "en la lista";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 está vacio";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Devuelve cierto si la lista está vacia.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg["LISTS_LENGTH_TITLE"] = "longitud de %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Devuelve la longitud de una lista.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_REPEAT_TITLE"] = "crea lista con el elemento %1 repetido %2 veces";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Crea una lista consistente con los valores repetidos un número especifico de veces.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "Invierte %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Invierte una copia de la lista.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "como";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "Añada en";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "establece";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Añade el elemento al comienzo de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Añade el elemento en la posición especificada de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Añade el elemento al final de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Añade el elemento de forma aleatoria en la llista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Establece el primer elemento de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Establece el elemento en la posición especificada de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Establece el último elemento de la lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Establece un elemento aleatorio de la lista.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "orden ascendente";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "orden descendente";
Blockly.Msg["LISTS_SORT_TITLE"] = "ordena %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Ordena una copia de la lista.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabético, ignora mayúsculas";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numérico";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alfabético";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "haz una lista a partir del texto";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "haz el texto a partir de la lista";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Une una lista de textos en un texto, separado por un delimitador.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Corta un texto en una lista de textos, cortando en cada delimitador.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "con delimitador";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falso";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Devuelve verdadero o falso.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "cierto";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Devuelve cierto si las dos entradas son iguales.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Devuelve cierto si la primera entrada es mas grande que la segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Devuelve cierto si la primera entrada es mas grande o igual que la segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Devuelve cierto si la primera entrada es mas pequeña que la segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Devuelve cierto si la primera entrada es mas pequeña o igual que la segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Devuelve cierto si las dos entradas son diferentes.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "no %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Devuelve cierto si la entrada es falsa. Devuelve falso si la entrada es cierta.";
Blockly.Msg["LOGIC_NULL"] = "nulo";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Devuelve nulo.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "y";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg["LOGIC_OPERATION_OR"] = "o";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Devuelve cierto si las dos entradas son ciertas.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Devuelve cierto si al menos una entrada es cierta.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "prueba";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "si falso";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "si cierto";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Comprueba la condición de la 'prueba'. Si la condición es certa, devuelve el valor 'si cierto'; si no devuelve el valor 'si falso'.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Devuelve la suma de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Devuelve el cociente de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Devuelve la diferencia de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Devuelve el producto de los dos números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 de X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Devuelve la arcotangente del punto (X, Y) en grados de -180 a 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg["MATH_CHANGE_TITLE"] = "cambia %1 por %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Añade un número a la variable '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Devuelve una de estas constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), o ∞ (infinito).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "restringe %1 entre %2 y %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Restringe un número para  estar entre los límites especificados (incluidos).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "es divisible por";
Blockly.Msg["MATH_IS_EVEN"] = "es par";
Blockly.Msg["MATH_IS_NEGATIVE"] = "es negativo";
Blockly.Msg["MATH_IS_ODD"] = "es impar";
Blockly.Msg["MATH_IS_POSITIVE"] = "es positivo";
Blockly.Msg["MATH_IS_PRIME"] = "es primo";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Comprueba si el número es  impar, par, primo, entero, positivo, negativo, o si es divisible per un cierto número. Devuelve cierto o falso.";
Blockly.Msg["MATH_IS_WHOLE"] = "es entero";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg["MATH_MODULO_TITLE"] = "residuo de %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Devuelve el residuo de la división de dos números.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Un número.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "máximo de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "mínimo de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "modas de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "elemento aleatorio de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "desviación estándard de la lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "suma de la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Devuelve la media aritmética de los valores numéricos de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Devuelve el valor mas grande la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Devuelve el valor mediana de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Devuelve el valor mas pequeño de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Devuelve una lista de los elementos más comunes de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Devuelve la desviación estándard de la lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Devuelve la suma de todos los números de la lista.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fracción aleatoria";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Devuelve una fracción aleatoria entre 0.0 (incluida) y 1.0 (excluida).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "entero aleatorio entre %1 y %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Devuelve un entero aleatorio entre dos límites especificados, incluidos.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "redondea";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "redondea hacia abajo";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "redondea hacia arriba";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Redondea un número hacia arriba o abajo.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluto";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "raiz cuadrada";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Devuelve el valor absoluto de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Devuelve <em>e</em> a la potencia de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Devuelve el logaritmo natural de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Devuelve el logaritmo de base 10 de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Devuelve la negación de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Devuelve 10 a la potencia de un número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Devuelve la raiz cuadrada de un número.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";
Blockly.Msg["MATH_TRIG_COS"] = "cos";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";
Blockly.Msg["MATH_TRIG_TAN"] = "tan";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Devuelve el arcocoseno de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Devuelve el arcoseno de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Devuelve el arcotangente de un número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Devuelve el coseno de un número en grados (no radianes).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Devuelve el seno de un número en grados (no radianes).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Devuelve la tangente de un número en grados (no radianes).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Crea una variable color...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Crea una variable número...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Crea una variable cadena...";
Blockly.Msg["NEW_VARIABLE"] = "Crea una variable...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nombre de la variable nueva:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Tipo de variable nueva:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "instrucciones autorizadas";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Ejecuta la función '%1' definida por el usuario.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Ejecuta la función '%1' definida por el usuario y usa la salida.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Crea '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe esta función...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "haz alguna cosa";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "por";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crea una función sin salida.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "devuelve";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crea una función con salida.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Aviso: Esta función tiene parámetros duplicados.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Subraya la definición de la función";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Si un valor es cierto, entonces devuelve un segon valor.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Aviso: Este bloque se puede usar solo con una definición de una función.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "Nombre de la entrada:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Añade una entrada a la función.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Añade, suprime, o reordena las entradas en esta función.";
Blockly.Msg["REDO"] = "Rehaz";
Blockly.Msg["REMOVE_COMMENT"] = "Suprime comentario";
Blockly.Msg["RENAME_VARIABLE"] = "Cambia el nombre a la variable...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Cambia el nombre a todas las variables '%1' en:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_APPEND_TITLE"] = "En %1 añade el texto %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Añade algún texto a la variable '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "en minúsculas";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "en mayúscula la primera letra de cada palabra";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "en mayúsculas";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "obtiene la primera letra";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "obtiene la letra nº desde el final";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "obtiene la letra nº";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg["TEXT_CHARAT_LAST"] = "obtiene la última letra";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "obtiene una letra aleatoria";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "%2 al texto %1";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Devuelve la letra a la posición especificada.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "cuenta %1 en %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Cuenta cuantas veces algún texto se encuentra dentro de ortro texto.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Añade un elemento al texto.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unirse";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Añade, suprime, o reordena secciones para reconfigurar este bloque de texto.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "hasta la lletra nº desde el final";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "hasta la letra nº";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "hasta la última letra";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "en el texto";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "obtiene la subcadena desde la primera letra";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "obtiene la subcadena desde la letra nº  desde el final";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "obtiene la subcadena desde la letra nº ";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Devuelve una porción especifica del texto.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "envuentra la primera ocurrencia del texto";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "envuentra la última ocurrencia del texto";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = " %2 %3 al texto %1";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Devuelve el índice de la primera/última ocurrencia del primer texto en el segundo texto. Devuelve %1 si el texto no se encuentra.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 está vacio";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Devuelve cierto si el texto proporcionado está vacio.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "crea texto con";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Crea un texto uniendo siempre cualquier número nombre de elementos.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_LENGTH_TITLE"] = "longitud de %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg["TEXT_PRINT_TITLE"] = "imprime %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Imprime el texto, número o otro valor especificado.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Pide al usuario un número.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Pide al usuario algún texto.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "Pide al usuario un mensaje";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "Pide un texto con un mensaje";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "Reemplaza %1 con %2 en %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Reemplaza todas les ocurrencias de un texto por otro.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "invierte %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Invierte el orden de los caracteres del texto.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Una letra, palabra, o línea de texto.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "corta espacios de los dos lados de";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "corta los espacios del lado izquierdo de";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "corta los espacios del lado derecho de";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Devuelve una copia del texto con los espacios suprimidos desde uno o desde los dos lados.";
Blockly.Msg["TODAY"] = "Hoy";
Blockly.Msg["UNDO"] = "Deshaz";
Blockly.Msg["UNNAMED_KEY"] = "sin nombre";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "elemento";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Crea 'configura %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Devuelve el valor de esta variable.";
Blockly.Msg["VARIABLES_SET"] = "configura %1 en %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Crea 'obtiene %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Configura esta variable para que sea igual a la entrada.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Una variable llamada '%1' ya existe.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Una variable llamada '%1' ya existe para otro tipo: '%2'.";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Espacio de trebajo de Blockly";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Explica alguna cosa...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
